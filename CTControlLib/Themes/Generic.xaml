<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controlEx="urn:controlzex"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:lib="clr-namespace:CTControlLib"
    xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
    xmlns:system="clr-namespace:System;assembly=System.Runtime">
    <Style TargetType="lib:CTToggleButton">
        <Setter Property="Height" Value="40" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="lib:CTToggleButton">
                    <Border
                        x:Name="_main"
                        Height="{TemplateBinding Height}"
                        Background="White"
                        BorderBrush="#B3B9C4"
                        BorderThickness="1"
                        CornerRadius="20">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" MinWidth="6" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <Grid>
                                <Rectangle
                                    x:Name="OnBk"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Stretch"
                                    Fill="Transparent"
                                    RadiusX="20"
                                    RadiusY="20" />
                                <TextBlock
                                    x:Name="OnContent"
                                    Margin="20,0"
                                    VerticalAlignment="Center"
                                    FontFamily="Microsoft YaHei"
                                    FontSize="14"
                                    FontWeight="Bold"
                                    Text="{TemplateBinding OnText}" />
                            </Grid>

                            <Grid Grid.Column="2" Margin="-20,0,0,0">
                                <Rectangle
                                    x:Name="OffBk"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Stretch"
                                    Fill="Transparent"
                                    RadiusX="20"
                                    RadiusY="20" />
                                <TextBlock
                                    x:Name="OffContent"
                                    Margin="20,0"
                                    VerticalAlignment="Center"
                                    FontFamily="Microsoft YaHei"
                                    FontSize="14"
                                    FontWeight="Bold"
                                    Text="{TemplateBinding OffText}" />
                            </Grid>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="_main" Property="BorderBrush" Value="#0ba5ed" />
                            <Setter TargetName="_main" Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect
                                        BlurRadius="10"
                                        Opacity="0.7"
                                        ShadowDepth="0"
                                        Color="#0ba5ed" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="_main" Property="BorderBrush" Value="#2a76f9" />
                            <Setter TargetName="_main" Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect
                                        BlurRadius="3"
                                        Opacity="0.9"
                                        ShadowDepth="0"
                                        Color="#2a76f9" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="OnStateSb">
                                    <Storyboard Duration="0:0:0.100">
                                        <ColorAnimation
                                            Storyboard.TargetName="OnBk"
                                            Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)"
                                            To="#161A1D"
                                            Duration="0:0:0.100" />
                                        <ColorAnimation
                                            Storyboard.TargetName="OnContent"
                                            Storyboard.TargetProperty="(Foreground).(SolidColorBrush.Color)"
                                            To="White"
                                            Duration="0:0:0.100" />
                                        <ColorAnimation
                                            Storyboard.TargetName="OffBk"
                                            Storyboard.TargetProperty="(Rectangle.Fill).(SolidColorBrush.Color)"
                                            To="Transparent"
                                            Duration="0:0:0.100" />
                                        <ColorAnimation
                                            Storyboard.TargetName="OffContent"
                                            Storyboard.TargetProperty="(Foreground).(SolidColorBrush.Color)"
                                            To="#B3B9C4"
                                            Duration="0:0:0.100" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <RemoveStoryboard BeginStoryboardName="OnStateSb" />
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="OffStateSb">
                                    <BeginStoryboard.Storyboard>
                                        <Storyboard Duration="0:0:0.100">
                                            <ColorAnimation
                                                Storyboard.TargetName="OffBk"
                                                Storyboard.TargetProperty="(Rectangle.Fill).(SolidColorBrush.Color)"
                                                To="#161A1D"
                                                Duration="0:0:0.100" />
                                            <ColorAnimation
                                                Storyboard.TargetName="OffContent"
                                                Storyboard.TargetProperty="(Foreground).(SolidColorBrush.Color)"
                                                To="White"
                                                Duration="0:0:0.100" />
                                            <ColorAnimation
                                                Storyboard.TargetName="OnBk"
                                                Storyboard.TargetProperty="(Rectangle.Fill).(SolidColorBrush.Color)"
                                                To="Transparent"
                                                Duration="0:0:0.100" />
                                            <ColorAnimation
                                                Storyboard.TargetName="OnContent"
                                                Storyboard.TargetProperty="(Foreground).(SolidColorBrush.Color)"
                                                To="#B3B9C4"
                                                Duration="0:0:0.100" />
                                        </Storyboard>
                                    </BeginStoryboard.Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <RemoveStoryboard BeginStoryboardName="OffStateSb" />
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="Button">
        <Setter Property="Background" Value="#161a1d" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontFamily" Value="Microsoft YaHei UI" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Height" Value="40" />
        <Setter Property="mah:ControlsHelper.CornerRadius" Value="20" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border
                        x:Name="_main"
                        Height="{TemplateBinding Height}"
                        Background="{TemplateBinding Background}"
                        CornerRadius="{TemplateBinding mah:ControlsHelper.CornerRadius}">
                        <ContentControl
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Content="{TemplateBinding Content}"
                            FontFamily="{TemplateBinding FontFamily}"
                            FontSize="{TemplateBinding FontSize}"
                            FontWeight="{TemplateBinding FontWeight}"
                            Foreground="{TemplateBinding Foreground}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="_main" Property="BorderThickness" Value="1" />
                            <Setter TargetName="_main" Property="BorderBrush" Value="#0ba5ed" />
                            <Setter TargetName="_main" Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect
                                        BlurRadius="10"
                                        Opacity="0.7"
                                        ShadowDepth="0"
                                        Color="#0ba5ed" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="_main" Property="BorderThickness" Value="1" />
                            <Setter TargetName="_main" Property="BorderBrush" Value="#2a76f9" />
                            <Setter TargetName="_main" Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect
                                        BlurRadius="3"
                                        Opacity="0.9"
                                        ShadowDepth="0"
                                        Color="#2a76f9" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="CloseButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="#9FADBC" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border
                        Height="{TemplateBinding Height}"
                        Padding="6"
                        Background="{TemplateBinding Background}"
                        CornerRadius="4">
                        <ContentControl
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Content="{TemplateBinding Content}"
                            Foreground="{TemplateBinding Foreground}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#44FF0000" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="#99FF0000" />
                <Setter Property="Foreground" Value="White" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="TextBoxRightButtonStyle" TargetType="Button">
        <Style.Setters>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border
                            Height="{TemplateBinding Height}"
                            Background="{TemplateBinding Background}"
                            CornerRadius="4">
                            <ContentControl
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Content="{TemplateBinding Content}"
                                Foreground="{TemplateBinding Foreground}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#22000000" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="#44000000" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="ButtonTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Control.Background}" />
        <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.TextBox.Border}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="CaretBrush" Value="{DynamicResource MahApps.Brushes.ThemeForeground}" />
        <Setter Property="ContextMenu" Value="{DynamicResource MahApps.TextBox.ContextMenu}" />
        <Setter Property="FontFamily" Value="{DynamicResource MahApps.Fonts.Family.Control}" />
        <Setter Property="FontSize" Value="{DynamicResource MahApps.Font.Size.Content}" />
        <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Text}" />
        <Setter Property="MinHeight" Value="26" />
        <Setter Property="Padding" Value="4" />
        <Setter Property="SelectionBrush" Value="{DynamicResource MahApps.Brushes.Highlight}" />
        <!--  change SnapsToDevicePixels to True to view a better border and validation error  -->
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Grid>
                        <Border
                            x:Name="Base"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding mah:ControlsHelper.CornerRadius}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

                        <Grid x:Name="PART_InnerGrid" Margin="{TemplateBinding BorderThickness}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="TextColumn" Width="*" />
                                <ColumnDefinition x:Name="ButtonColumn" Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition x:Name="ButtonRow" Height="*" />
                            </Grid.RowDefinitions>

                            <ScrollViewer
                                x:Name="PART_ContentHost"
                                Grid.Row="1"
                                Grid.Column="0"
                                Margin="0"
                                Padding="{TemplateBinding Padding}"
                                VerticalAlignment="Stretch"
                                Background="{x:Null}"
                                BorderThickness="0"
                                IsTabStop="False"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                Style="{DynamicResource MahApps.Styles.ScrollViewer.TextControlContentHost}" />

                            <TextBlock
                                x:Name="PART_Message"
                                Grid.Row="1"
                                Grid.Column="0"
                                Margin="4,0"
                                Padding="{TemplateBinding Padding}"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Foreground="{TemplateBinding Foreground}"
                                Style="{DynamicResource MahApps.Styles.TextBlock.Watermark}"
                                Text="{TemplateBinding mah:TextBoxHelper.Watermark}"
                                TextAlignment="{TemplateBinding mah:TextBoxHelper.WatermarkAlignment}"
                                TextTrimming="{TemplateBinding mah:TextBoxHelper.WatermarkTrimming}"
                                TextWrapping="{TemplateBinding mah:TextBoxHelper.WatermarkWrapping}"
                                Visibility="Collapsed" />

                            <ContentControl
                                x:Name="PART_FloatingMessageContainer"
                                Grid.Row="0"
                                Grid.Column="0"
                                Margin="4,0"
                                Style="{DynamicResource MahApps.Styles.ContentControl.FloatingMessageContainer}">
                                <ContentControl.Height>
                                    <MultiBinding Converter="{mah:MathMultiplyConverter}" FallbackValue="0">
                                        <Binding
                                            ElementName="PART_FloatingMessage"
                                            Mode="OneWay"
                                            Path="ActualHeight" />
                                        <Binding
                                            ElementName="PART_FloatingMessageContainer"
                                            Mode="OneWay"
                                            Path="Opacity" />
                                    </MultiBinding>
                                </ContentControl.Height>
                                <TextBlock
                                    x:Name="PART_FloatingMessage"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Foreground="{TemplateBinding Foreground}"
                                    Style="{DynamicResource MahApps.Styles.TextBlock.AutoCollapsing}"
                                    Text="{TemplateBinding mah:TextBoxHelper.Watermark}"
                                    TextAlignment="{TemplateBinding mah:TextBoxHelper.WatermarkAlignment}"
                                    TextTrimming="{TemplateBinding mah:TextBoxHelper.WatermarkTrimming}">
                                    <TextBlock.RenderTransform>
                                        <TranslateTransform x:Name="FloatingMessageTransform">
                                            <TranslateTransform.Y>
                                                <MultiBinding Converter="{mah:MathSubtractConverter}" FallbackValue="0">
                                                    <Binding
                                                        ElementName="PART_FloatingMessage"
                                                        Mode="OneWay"
                                                        Path="ActualHeight" />
                                                    <Binding
                                                        ElementName="PART_FloatingMessageContainer"
                                                        Mode="OneWay"
                                                        Path="ActualHeight" />
                                                </MultiBinding>
                                            </TranslateTransform.Y>
                                        </TranslateTransform>
                                    </TextBlock.RenderTransform>
                                </TextBlock>
                            </ContentControl>

                            <Button
                                x:Name="PART_ClearText"
                                Grid.Row="0"
                                Grid.RowSpan="2"
                                Grid.Column="1"
                                Width="{TemplateBinding mah:TextBoxHelper.ButtonWidth}"
                                Margin="0,6,6,6"
                                VerticalAlignment="Stretch"
                                mah:ControlsHelper.CornerRadius="6"
                                Command="{TemplateBinding mah:TextBoxHelper.ButtonCommand}"
                                CommandParameter="{TemplateBinding mah:TextBoxHelper.ButtonCommandParameter}"
                                CommandTarget="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                Content="{TemplateBinding mah:TextBoxHelper.ButtonContent}"
                                ContentTemplate="{TemplateBinding mah:TextBoxHelper.ButtonContentTemplate}"
                                Focusable="False"
                                FontFamily="{TemplateBinding mah:TextBoxHelper.ButtonFontFamily}"
                                FontSize="{TemplateBinding mah:TextBoxHelper.ButtonFontSize}"
                                IsTabStop="False"
                                Style="{StaticResource TextBoxRightButtonStyle}"
                                Visibility="Visible" />
                        </Grid>

                        <Border
                            x:Name="DisabledVisualElement"
                            Background="{DynamicResource MahApps.Brushes.Control.Disabled}"
                            BorderBrush="{DynamicResource MahApps.Brushes.Control.Disabled}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding mah:ControlsHelper.CornerRadius}"
                            IsHitTestVisible="False"
                            Opacity="0"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ControlsHelper.DisabledVisualElementVisibility), Mode=OneWay}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="mah:TextBoxHelper.ClearTextButton" Value="True">
                            <Setter TargetName="PART_ClearText" Property="Command" Value="{x:Static mah:MahAppsCommands.ClearControlCommand}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="mah:TextBoxHelper.TextButton" Value="False" />
                                <Condition Property="mah:TextBoxHelper.ButtonCommand" Value="{x:Null}" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_ClearText" Property="Visibility" Value="Collapsed" />
                        </MultiTrigger>

                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=(mah:TextBoxHelper.ButtonsAlignment)}" Value="Left">
                            <Setter TargetName="ButtonColumn" Property="Width" Value="*" />
                            <Setter TargetName="PART_ClearText" Property="Grid.Column" Value="0" />
                            <Setter TargetName="PART_ContentHost" Property="Grid.Column" Value="1" />
                            <Setter TargetName="PART_FloatingMessageContainer" Property="Grid.Column" Value="1" />
                            <Setter TargetName="PART_Message" Property="Grid.Column" Value="1" />
                            <Setter TargetName="TextColumn" Property="Width" Value="Auto" />
                        </DataTrigger>

                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Text}" Value="">
                            <Setter TargetName="PART_Message" Property="Visibility" Value="Visible" />
                        </DataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsVisible, RelativeSource={RelativeSource Self}}" Value="True" />
                                <Condition Binding="{Binding Path=(mah:TextBoxHelper.UseFloatingWatermark), RelativeSource={RelativeSource Self}}" Value="True" />
                                <Condition Binding="{Binding Path=(mah:TextBoxHelper.HasText), RelativeSource={RelativeSource Self}}" Value="True" />
                                <Condition Binding="{Binding Path=(mah:TextBoxHelper.Watermark), RelativeSource={RelativeSource Self}}" Value="False" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource MahApps.Storyboard.ShowFloatingMessage}" />
                            </MultiDataTrigger.EnterActions>
                            <MultiDataTrigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource MahApps.Storyboard.HideFloatingMessage}" />
                            </MultiDataTrigger.ExitActions>
                        </MultiDataTrigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Base" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ControlsHelper.MouseOverBorderBrush)}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="DisabledVisualElement" Property="Opacity" Value="0.6" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="Base" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ControlsHelper.FocusBorderBrush)}" />
                            <Setter TargetName="PART_FloatingMessage" Property="Foreground" Value="{DynamicResource MahApps.Brushes.TextBlock.FloatingMessage}" />
                            <Setter TargetName="PART_FloatingMessage" Property="Opacity" Value="1" />
                        </Trigger>

                        <Trigger Property="mah:TextBoxHelper.ClearTextButton" Value="True">
                            <Setter TargetName="PART_ClearText" Property="Command" Value="{x:Static mah:MahAppsCommands.ClearControlCommand}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="mah:TextBoxHelper.ClearTextButton" Value="False" />
                                <Condition Property="mah:TextBoxHelper.ButtonCommand" Value="{x:Null}" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_ClearText" Property="Visibility" Value="Collapsed" />
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="mah:TextBoxHelper.HasText" Value="False" />
                                <Condition Property="IsFocused" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource MahApps.Storyboard.EnterGotFocus}" />
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource MahApps.Storyboard.ExitGotFocus}" />
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>

                        <Trigger Property="mah:TextBoxHelper.HasText" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource MahApps.Storyboard.EnterHasText}" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource MahApps.Storyboard.ExitHasText}" />
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Validation.ErrorTemplate" Value="{DynamicResource MahApps.Templates.ValidationError}" />

        <Setter Property="mah:ControlsHelper.FocusBorderBrush" Value="{DynamicResource MahApps.Brushes.TextBox.Border.Focus}" />
        <Setter Property="mah:ControlsHelper.MouseOverBorderBrush" Value="{DynamicResource MahApps.Brushes.TextBox.Border.MouseOver}" />

        <Setter Property="mah:TextBoxHelper.ButtonCommandParameter" Value="{Binding RelativeSource={RelativeSource Self}, Mode=OneWay}" />
        <Setter Property="mah:TextBoxHelper.ButtonFontSize" Value="{DynamicResource MahApps.Font.Size.Button.ClearText}" />
        <Setter Property="mah:TextBoxHelper.ButtonTemplate" Value="{DynamicResource MahApps.Templates.Button.Chromeless}" />
        <Setter Property="mah:TextBoxHelper.ButtonWidth" Value="22" />
        <Setter Property="mah:TextBoxHelper.IsMonitoring" Value="True" />
        <Setter Property="mah:TextBoxHelper.IsSpellCheckContextMenuEnabled" Value="{Binding RelativeSource={RelativeSource Self}, Path=(SpellCheck.IsEnabled)}" />
        <Setter Property="mah:TextBoxHelper.WatermarkWrapping" Value="{Binding RelativeSource={RelativeSource Self}, Path=TextWrapping, Mode=OneWay}" />
    </Style>
    <Style x:Key="CTDatePicker" TargetType="{x:Type DatePicker}">
        <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Control.Background}" />
        <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.TextBox.Border}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="CalendarStyle" Value="{DynamicResource MahApps.Styles.Calendar.Base}" />
        <Setter Property="ContextMenu" Value="{DynamicResource MahApps.TextBox.ContextMenu}" />
        <Setter Property="FontFamily" Value="{DynamicResource MahApps.Fonts.Family.Control}" />
        <Setter Property="FontSize" Value="{DynamicResource MahApps.Font.Size.Content}" />
        <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Text}" />
        <Setter Property="IsTodayHighlighted" Value="True" />
        <Setter Property="MinHeight" Value="26" />
        <Setter Property="Padding" Value="4" />
        <Setter Property="SelectedDateFormat" Value="Short" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DatePicker}">
                    <Grid x:Name="PART_Root">
                        <Border
                            x:Name="Base"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding mah:ControlsHelper.CornerRadius}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

                        <Grid x:Name="PART_InnerGrid" Margin="{TemplateBinding BorderThickness}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="TextColumn" Width="*" />
                                <ColumnDefinition x:Name="ClearButtonColumn" Width="Auto" />
                                <ColumnDefinition x:Name="ButtonColumn" Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition x:Name="ButtonRow" Height="*" />
                            </Grid.RowDefinitions>

                            <DatePickerTextBox
                                x:Name="PART_TextBox"
                                Grid.Row="1"
                                Grid.Column="0"
                                Margin="0"
                                Padding="{TemplateBinding Padding}"
                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                mah:TextBoxHelper.Watermark="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:TextBoxHelper.Watermark), Mode=OneWay}"
                                mah:TextBoxHelper.WatermarkAlignment="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:TextBoxHelper.WatermarkAlignment), Mode=OneWay}"
                                mah:TextBoxHelper.WatermarkTrimming="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:TextBoxHelper.WatermarkTrimming), Mode=OneWay}"
                                CaretBrush="{DynamicResource MahApps.Brushes.ThemeForeground}"
                                ContextMenu="{TemplateBinding ContextMenu}"
                                Focusable="{TemplateBinding Focusable}"
                                FontSize="{TemplateBinding FontSize}"
                                Foreground="{TemplateBinding Foreground}"
                                SelectionBrush="{DynamicResource MahApps.Brushes.Highlight}">
                                <i:Interaction.Behaviors>
                                    <mah:DatePickerTextBoxBehavior />
                                </i:Interaction.Behaviors>
                            </DatePickerTextBox>

                            <ContentControl
                                x:Name="PART_FloatingMessageContainer"
                                Grid.Row="0"
                                Grid.Column="0"
                                Margin="4,0"
                                Style="{DynamicResource MahApps.Styles.ContentControl.FloatingMessageContainer}">
                                <ContentControl.Height>
                                    <MultiBinding Converter="{mah:MathMultiplyConverter}" FallbackValue="0">
                                        <Binding
                                            ElementName="PART_FloatingMessage"
                                            Mode="OneWay"
                                            Path="ActualHeight" />
                                        <Binding
                                            ElementName="PART_FloatingMessageContainer"
                                            Mode="OneWay"
                                            Path="Opacity" />
                                    </MultiBinding>
                                </ContentControl.Height>
                                <TextBlock
                                    x:Name="PART_FloatingMessage"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Foreground="{TemplateBinding Foreground}"
                                    Style="{DynamicResource MahApps.Styles.TextBlock.AutoCollapsing}"
                                    Text="{TemplateBinding mah:TextBoxHelper.Watermark}"
                                    TextAlignment="{TemplateBinding mah:TextBoxHelper.WatermarkAlignment}"
                                    TextTrimming="{TemplateBinding mah:TextBoxHelper.WatermarkTrimming}">
                                    <TextBlock.RenderTransform>
                                        <TranslateTransform x:Name="FloatingMessageTransform">
                                            <TranslateTransform.Y>
                                                <MultiBinding Converter="{mah:MathSubtractConverter}" FallbackValue="0">
                                                    <Binding
                                                        ElementName="PART_FloatingMessage"
                                                        Mode="OneWay"
                                                        Path="ActualHeight" />
                                                    <Binding
                                                        ElementName="PART_FloatingMessageContainer"
                                                        Mode="OneWay"
                                                        Path="ActualHeight" />
                                                </MultiBinding>
                                            </TranslateTransform.Y>
                                        </TranslateTransform>
                                    </TextBlock.RenderTransform>
                                </TextBlock>
                            </ContentControl>

                            <Button
                                x:Name="PART_ClearText"
                                Grid.Row="0"
                                Grid.RowSpan="2"
                                Grid.Column="1"
                                Width="{TemplateBinding mah:TextBoxHelper.ButtonWidth}"
                                Command="{TemplateBinding mah:TextBoxHelper.ButtonCommand}"
                                CommandParameter="{TemplateBinding mah:TextBoxHelper.ButtonCommandParameter}"
                                Content="{TemplateBinding mah:TextBoxHelper.ButtonContent}"
                                ContentTemplate="{TemplateBinding mah:TextBoxHelper.ButtonContentTemplate}"
                                Focusable="False"
                                FontFamily="{TemplateBinding mah:TextBoxHelper.ButtonFontFamily}"
                                FontSize="{TemplateBinding mah:TextBoxHelper.ButtonFontSize}"
                                IsTabStop="False"
                                Style="{DynamicResource MahApps.Styles.Button.Chromeless}"
                                Template="{TemplateBinding mah:TextBoxHelper.ButtonTemplate}"
                                Visibility="Visible" />

                            <Button
                                x:Name="PART_Button"
                                Grid.Row="0"
                                Grid.RowSpan="2"
                                Grid.Column="2"
                                Width="{TemplateBinding mah:TextBoxHelper.ButtonWidth}"
                                Margin="0,6,6,6"
                                VerticalAlignment="Stretch"
                                Content="{TemplateBinding mah:DatePickerHelper.DropDownButtonContent}"
                                ContentTemplate="{TemplateBinding mah:DatePickerHelper.DropDownButtonContentTemplate}"
                                Focusable="False"
                                FontFamily="{TemplateBinding mah:DatePickerHelper.DropDownButtonFontFamily}"
                                FontSize="{TemplateBinding mah:DatePickerHelper.DropDownButtonFontSize}"
                                IsTabStop="False"
                                Style="{StaticResource TextBoxRightButtonStyle}" />

                            <controlEx:PopupEx
                                x:Name="PART_Popup"
                                Grid.Row="1"
                                Grid.Column="0"
                                AllowsTransparency="True"
                                Focusable="False"
                                Placement="Bottom"
                                PlacementTarget="{Binding ElementName=PART_Root}"
                                PopupAnimation="Fade"
                                StaysOpen="False" />
                        </Grid>

                        <Border
                            x:Name="DisabledVisualElement"
                            Background="{DynamicResource MahApps.Brushes.Control.Disabled}"
                            BorderBrush="{DynamicResource MahApps.Brushes.Control.Disabled}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding mah:ControlsHelper.CornerRadius}"
                            IsHitTestVisible="False"
                            Opacity="0"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ControlsHelper.DisabledVisualElementVisibility), Mode=OneWay}" />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="mah:TextBoxHelper.ClearTextButton" Value="True">
                            <Setter TargetName="PART_ClearText" Property="Command" Value="{x:Static mah:MahAppsCommands.ClearControlCommand}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="mah:TextBoxHelper.ClearTextButton" Value="False" />
                                <Condition Property="mah:TextBoxHelper.ButtonCommand" Value="{x:Null}" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_ClearText" Property="Visibility" Value="Collapsed" />
                        </MultiTrigger>

                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=(mah:TextBoxHelper.ButtonsAlignment)}" Value="Left">
                            <Setter TargetName="ButtonColumn" Property="Width" Value="*" />
                            <Setter TargetName="PART_Button" Property="Grid.Column" Value="0" />
                            <Setter TargetName="PART_ClearText" Property="Grid.Column" Value="1" />
                            <Setter TargetName="PART_FloatingMessageContainer" Property="Grid.Column" Value="2" />
                            <Setter TargetName="PART_TextBox" Property="Grid.Column" Value="2" />
                            <Setter TargetName="TextColumn" Property="Width" Value="Auto" />
                        </DataTrigger>

                        <Trigger Property="mah:ControlsHelper.IsReadOnly" Value="True">
                            <Setter TargetName="PART_Button" Property="IsEnabled" Value="False" />
                            <Setter TargetName="PART_TextBox" Property="IsReadOnly" Value="True" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Base" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ControlsHelper.MouseOverBorderBrush)}" />
                        </Trigger>
                        <Trigger SourceName="PART_TextBox" Property="IsFocused" Value="True">
                            <Setter TargetName="Base" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ControlsHelper.FocusBorderBrush)}" />
                            <Setter TargetName="PART_FloatingMessage" Property="Foreground" Value="{DynamicResource MahApps.Brushes.TextBlock.FloatingMessage}" />
                            <Setter TargetName="PART_FloatingMessage" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                            <Setter TargetName="Base" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ControlsHelper.FocusBorderBrush)}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="DisabledVisualElement" Property="Opacity" Value="0.6" />
                        </Trigger>

                        <Trigger SourceName="PART_ClearText" Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_ClearText" Property="Background" Value="{DynamicResource MahApps.Brushes.Gray8}" />
                            <Setter TargetName="PART_ClearText" Property="Foreground" Value="{DynamicResource MahApps.Brushes.Accent}" />
                        </Trigger>
                        <Trigger SourceName="PART_ClearText" Property="IsPressed" Value="True">
                            <Setter TargetName="PART_ClearText" Property="Background" Value="{DynamicResource MahApps.Brushes.ThemeForeground}" />
                            <Setter TargetName="PART_ClearText" Property="Foreground" Value="{DynamicResource MahApps.Brushes.ThemeBackground}" />
                        </Trigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsVisible, RelativeSource={RelativeSource Self}}" Value="True" />
                                <Condition Binding="{Binding Path=(mah:TextBoxHelper.UseFloatingWatermark), RelativeSource={RelativeSource Self}}" Value="True" />
                                <Condition Binding="{Binding Path=(mah:TextBoxHelper.HasText), RelativeSource={RelativeSource Self}}" Value="True" />
                                <Condition Binding="{Binding Path=(mah:TextBoxHelper.Watermark), RelativeSource={RelativeSource Self}}" Value="False" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource MahApps.Storyboard.ShowFloatingMessage}" />
                            </MultiDataTrigger.EnterActions>
                            <MultiDataTrigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource MahApps.Storyboard.HideFloatingMessage}" />
                            </MultiDataTrigger.ExitActions>
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Validation.ErrorTemplate" Value="{DynamicResource MahApps.Templates.ValidationError}" />

        <Setter Property="mah:ControlsHelper.FocusBorderBrush" Value="{DynamicResource MahApps.Brushes.TextBox.Border.Focus}" />
        <Setter Property="mah:ControlsHelper.MouseOverBorderBrush" Value="{DynamicResource MahApps.Brushes.TextBox.Border.MouseOver}" />
        <Setter Property="mah:TextBoxHelper.ButtonCommandParameter" Value="{Binding RelativeSource={RelativeSource Self}, Mode=OneWay}" />
        <Setter Property="mah:TextBoxHelper.ButtonFontSize" Value="{DynamicResource MahApps.Font.Size.Button.ClearText}" />
        <Setter Property="mah:TextBoxHelper.ButtonTemplate" Value="{DynamicResource MahApps.Templates.Button.Chromeless}" />
        <Setter Property="mah:TextBoxHelper.ButtonWidth" Value="22" />
        <Setter Property="mah:TextBoxHelper.IsMonitoring" Value="True" />
    </Style>
    <Style x:Key="DefaultColumnHeader" TargetType="DataGridColumnHeader">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Foreground" Value="#9FADBC" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Height" Value="40" />
        <Setter Property="MinWidth" Value="0" />
        <Setter Property="Padding" Value="{Binding Path=(mah:DataGridHelper.ColumnHeaderPadding), FallbackValue=0, TargetNullValue=0, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Background" Value="White" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Border
                            x:Name="BackgroundBorder"
                            Grid.ColumnSpan="2"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}" />

                        <mah:ContentControlEx
                            x:Name="HeaderContent"
                            Grid.Column="0"
                            Margin="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                            Content="{TemplateBinding Content}"
                            ContentCharacterCasing="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ControlsHelper.ContentCharacterCasing)}"
                            ContentStringFormat="{TemplateBinding ContentStringFormat}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                            RecognizesAccessKey="{TemplateBinding mah:ControlsHelper.RecognizesAccessKey}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

                        <Path
                            x:Name="SortArrow"
                            Grid.Column="1"
                            Width="8"
                            Height="10"
                            Margin="0,0,8,2"
                            VerticalAlignment="Center"
                            Fill="{DynamicResource MahApps.Brushes.DataGridColumnHeader.SortArrowFill}"
                            RenderTransformOrigin="0.5,0.5"
                            Stretch="Fill"
                            Visibility="Collapsed" />

                        <Thumb
                            x:Name="PART_LeftHeaderGripper"
                            Grid.Column="0"
                            HorizontalAlignment="Left"
                            Background="Transparent"
                            Style="{StaticResource MahApps.Styles.Thumb.ColumnHeaderGripper}" />

                        <Thumb
                            x:Name="PART_RightHeaderGripper"
                            Grid.Column="1"
                            HorizontalAlignment="Right"
                            Background="Transparent"
                            Style="{StaticResource MahApps.Styles.Thumb.ColumnHeaderGripper}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="SortDirection" Value="Ascending">
                            <Setter TargetName="SortArrow" Property="Data" Value="F1 M 34,57L 42,57L 42,32.25L 52,42.25L 52,31.75L 38,17.75L 24,31.75L 24,42.25L 34,32.25L 34,57 Z " />
                            <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="SortDirection" Value="Descending">
                            <Setter TargetName="SortArrow" Property="Data" Value="F1 M 42,19.0002L 34,19.0002L 34,43.7502L 24,33.7502L 24,44.2502L 38,58.2502L 52,44.2502L 52,33.7502L 42,43.7502L 42,19.0002 Z " />
                            <Setter TargetName="SortArrow" Property="Margin" Value="0,0,8,0" />
                            <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="DisplayIndex" Value="0">
                            <Setter TargetName="PART_LeftHeaderGripper" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="mah:ControlsHelper.ContentCharacterCasing" Value="{DynamicResource MahApps.CharacterCasing.DataGridColumnHeader}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=Column.IsReadOnly, RelativeSource={RelativeSource Self}, Mode=OneWay, FallbackValue=False, TargetNullValue=False}" Value="True">
                <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.DataGridColumnHeader.Background.ReadOnly}" />
            </DataTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="#22000000" />
            </MultiTrigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="DefaultDataGridRow"
        BasedOn="{x:Null}"
        TargetType="DataGridRow">
        <Setter Property="Height" Value="60" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#DCDFE4" />
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="#DCDFE4" />
                <Setter Property="Foreground" Value="#172B4D" />
            </Trigger>
        </Style.Triggers>
        <Style.Resources>
            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="#DCDFE4" />
            <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="#DCDFE4" />
            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="#172B4D" />
            <SolidColorBrush x:Key="{x:Static SystemColors.ControlTextBrushKey}" Color="#172B4D" />
        </Style.Resources>
    </Style>
    <Style
        x:Key="DefaultDataGridCell"
        BasedOn="{x:Null}"
        TargetType="DataGridCell">
        <Setter Property="IsEditing" Value="False" />
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="BorderThickness" Value="0" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="PickDateRadioButton" TargetType="RadioButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Border
                        x:Name="part_bd"
                        Width="{TemplateBinding Width}"
                        Height="{TemplateBinding Height}"
                        Background="Transparent"
                        CornerRadius="10">
                        <ContentControl
                            x:Name="part_cc"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Content="{TemplateBinding Content}"
                            FontFamily="Microsoft YaHei UI"
                            FontSize="14"
                            Foreground="#738496" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="part_bd" Property="Background" Value="#22000000" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="part_bd" Property="Background" Value="#22272B" />
                            <Setter TargetName="part_cc" Property="Foreground" Value="White" />
                            <Setter TargetName="part_cc" Property="FontWeight" Value="Bold" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="PagingButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="#161a1d" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Padding" Value="10,0" />
        <Setter Property="FontFamily" Value="Microsoft YaHei UI" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Height" Value="40" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border
                        x:Name="_main"
                        Height="{TemplateBinding Height}"
                        Background="{TemplateBinding Background}"
                        CornerRadius="10">
                        <ContentControl
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Content="{TemplateBinding Content}"
                            FontFamily="{TemplateBinding FontFamily}"
                            FontSize="{TemplateBinding FontSize}"
                            FontWeight="{TemplateBinding FontWeight}"
                            Foreground="{TemplateBinding Foreground}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="_main" Property="BorderThickness" Value="1" />
                            <Setter TargetName="_main" Property="BorderBrush" Value="#0ba5ed" />
                            <Setter TargetName="_main" Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect
                                        BlurRadius="10"
                                        Opacity="0.7"
                                        ShadowDepth="0"
                                        Color="#0ba5ed" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="_main" Property="BorderThickness" Value="1" />
                            <Setter TargetName="_main" Property="BorderBrush" Value="#2a76f9" />
                            <Setter TargetName="_main" Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect
                                        BlurRadius="3"
                                        Opacity="0.9"
                                        ShadowDepth="0"
                                        Color="#2a76f9" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="_main" Property="Background" Value="#9FADBC" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="lib:UserStateButton">
        <Setter Property="Height" Value="40" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="lib:UserStateButton">
                    <Border
                        x:Name="_main"
                        Width="{TemplateBinding Width}"
                        Height="{TemplateBinding Height}"
                        CornerRadius="{TemplateBinding mah:ControlsHelper.CornerRadius}">
                        <Grid>
                            <ContentPresenter
                                x:Name="onContent"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                Content="{TemplateBinding OnContent}" />
                            <ContentPresenter
                                x:Name="offContent"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                Content="{TemplateBinding OffContent}" />
                            <Rectangle
                                x:Name="adornerLayer"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="adornerLayer" Property="Fill" Value="#1AFFFFFF" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="adornerLayer" Property="Fill" Value="#22FFFFFF" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="onContent" Property="Visibility" Value="Visible" />
                            <Setter TargetName="offContent" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="false">
                            <Setter TargetName="offContent" Property="Visibility" Value="Visible" />
                            <Setter TargetName="onContent" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="SettingValueBox" TargetType="mah:NumericUpDown">
        <Setter Property="BorderBrush" Value="#DCDFE4" />
        <Setter Property="Interval" Value="0.01" />
        <Setter Property="StringFormat" Value="0.##" />
        <Setter Property="mah:ControlsHelper.CornerRadius" Value="8" />
        <Setter Property="TextAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Foreground" Value="#758195" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="mah:ControlsHelper.MouseOverBorderBrush" Value="#758195" />
        <Setter Property="mah:ControlsHelper.FocusBorderBrush" Value="#758195" />
        <Setter Property="HideUpDownButtons" Value="True" />
        <Setter Property="Width" Value="80" />
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="#F1F2F4" />
                <Setter Property="BorderThickness" Value="0" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="SpotTabControl" TargetType="{x:Type TabControl}">
        <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.ThemeBackground}" />
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="ColumnDefinition0" />
                            <ColumnDefinition x:Name="ColumnDefinition1" Width="0" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition x:Name="RowDefinition0" Height="Auto" />
                            <RowDefinition x:Name="RowDefinition1" Height="*" />
                        </Grid.RowDefinitions>
                        <Border
                            x:Name="HeaderPanelGrid"
                            Grid.Row="0"
                            Grid.Column="0"
                            Margin="0,8"
                            HorizontalAlignment="Center"
                            Panel.ZIndex="1"
                            Background="#F1F2F4"
                            CornerRadius="10">
                            <TabPanel
                                x:Name="HeaderPanel"
                                IsItemsHost="true"
                                KeyboardNavigation.TabIndex="1" />
                        </Border>
                        <Border
                            x:Name="ContentPanel"
                            Grid.Row="1"
                            Grid.Column="0"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding mah:ControlsHelper.CornerRadius}"
                            KeyboardNavigation.DirectionalNavigation="Contained"
                            KeyboardNavigation.TabIndex="2"
                            KeyboardNavigation.TabNavigation="Local"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <ContentPresenter
                                x:Name="PART_SelectedContentHost"
                                Margin="{TemplateBinding Padding}"
                                ContentSource="SelectedContent"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
                            <Setter TargetName="HeaderPanelGrid" Property="Grid.Row" Value="1" />
                            <Setter TargetName="HeaderPanelGrid" Property="Margin" Value="2,0,2,2" />
                            <Setter TargetName="RowDefinition0" Property="Height" Value="*" />
                            <Setter TargetName="RowDefinition1" Property="Height" Value="Auto" />
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter TargetName="ColumnDefinition0" Property="Width" Value="Auto" />
                            <Setter TargetName="ColumnDefinition1" Property="Width" Value="*" />
                            <Setter TargetName="ContentPanel" Property="Grid.Column" Value="1" />
                            <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
                            <Setter TargetName="HeaderPanelGrid" Property="Grid.Column" Value="0" />
                            <Setter TargetName="HeaderPanelGrid" Property="Grid.Row" Value="0" />
                            <Setter TargetName="HeaderPanelGrid" Property="Margin" Value="2,2,0,2" />
                            <Setter TargetName="RowDefinition0" Property="Height" Value="*" />
                            <Setter TargetName="RowDefinition1" Property="Height" Value="0" />
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter TargetName="ColumnDefinition0" Property="Width" Value="*" />
                            <Setter TargetName="ColumnDefinition1" Property="Width" Value="Auto" />
                            <Setter TargetName="ContentPanel" Property="Grid.Column" Value="0" />
                            <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
                            <Setter TargetName="HeaderPanelGrid" Property="Grid.Column" Value="1" />
                            <Setter TargetName="HeaderPanelGrid" Property="Grid.Row" Value="0" />
                            <Setter TargetName="HeaderPanelGrid" Property="Margin" Value="0,2,2,2" />
                            <Setter TargetName="RowDefinition0" Property="Height" Value="*" />
                            <Setter TargetName="RowDefinition1" Property="Height" Value="0" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="mah:HeaderedControlHelper.HeaderBackground" Value="#F1F2F4" />
        <Setter Property="mah:HeaderedControlHelper.HeaderFontSize" Value="20" />
        <Setter Property="mah:HeaderedControlHelper.HeaderForeground" Value="#44546F" />
    </Style>
    <Style x:Key="SpotTabItem" TargetType="TabItem">
        <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=(mah:HeaderedControlHelper.HeaderBackground), Mode=OneWay, FallbackValue={x:Static Brushes.Transparent}}" />

        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Foreground" Value="#8590A2" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}, Path=HorizontalContentAlignment, Mode=OneWay, FallbackValue={x:Static HorizontalAlignment.Stretch}}" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="MinHeight" Value="5" />
        <Setter Property="BorderBrush" Value="#44546F" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="MinWidth" Value="5" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabItem">
                    <Border
                        x:Name="Border"
                        Height="40"
                        Padding="10,6"
                        HorizontalAlignment="Stretch"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="10"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <Grid
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Center"
                            UseLayoutRounding="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="PART_ContentLeftCol" Width="Auto" />
                                <ColumnDefinition x:Name="PART_ContentRightCol" Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition x:Name="PART_ContentTopRow" Height="Auto" />
                                <RowDefinition x:Name="PART_ContentBottomRow" Height="Auto" />
                            </Grid.RowDefinitions>
                            <mah:ContentControlEx
                                x:Name="ContentSite"
                                Grid.Row="0"
                                Grid.Column="0"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding mah:HeaderedControlHelper.HeaderHorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding mah:HeaderedControlHelper.HeaderVerticalContentAlignment}"
                                Content="{TemplateBinding Header}"
                                ContentCharacterCasing="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ControlsHelper.ContentCharacterCasing)}"
                                ContentStringFormat="{TemplateBinding HeaderStringFormat}"
                                ContentTemplate="{TemplateBinding HeaderTemplate}"
                                ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                FontFamily="{TemplateBinding mah:HeaderedControlHelper.HeaderFontFamily}"
                                FontSize="{TemplateBinding mah:HeaderedControlHelper.HeaderFontSize}"
                                FontStretch="{TemplateBinding mah:HeaderedControlHelper.HeaderFontStretch}"
                                FontStyle="{TemplateBinding FontStyle}"
                                FontWeight="{TemplateBinding mah:HeaderedControlHelper.HeaderFontWeight}"
                                Foreground="{TemplateBinding Foreground}"
                                RecognizesAccessKey="{TemplateBinding mah:ControlsHelper.RecognizesAccessKey}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                UseLayoutRounding="False" />
                            <mah:Underline
                                x:Name="Underline"
                                Grid.Row="1"
                                Grid.Column="0"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                Background="{x:Null}"
                                BorderBrush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:TabControlHelper.UnderlineBrush), Mode=OneWay}"
                                LineExtent="{DynamicResource TabItemUnderlineExtent}"
                                LineThickness="{DynamicResource TabItemUnderlineThickness}"
                                Placement="Bottom"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter TargetName="ContentSite" Property="Grid.Column" Value="0" />
                            <Setter TargetName="ContentSite" Property="Grid.Row" Value="0" />
                            <Setter TargetName="PART_ContentBottomRow" Property="Height" Value="Auto" />
                            <Setter TargetName="PART_ContentLeftCol" Property="Width" Value="*" />
                            <Setter TargetName="PART_ContentRightCol" Property="Width" Value="Auto" />
                            <Setter TargetName="PART_ContentTopRow" Property="Height" Value="*" />
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Top">
                            <Setter TargetName="ContentSite" Property="Grid.Column" Value="0" />
                            <Setter TargetName="ContentSite" Property="Grid.Row" Value="0" />
                            <Setter TargetName="PART_ContentBottomRow" Property="Height" Value="Auto" />
                            <Setter TargetName="PART_ContentLeftCol" Property="Width" Value="*" />
                            <Setter TargetName="PART_ContentRightCol" Property="Width" Value="Auto" />
                            <Setter TargetName="PART_ContentTopRow" Property="Height" Value="*" />
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter TargetName="ContentSite" Property="Grid.Column" Value="1" />
                            <Setter TargetName="ContentSite" Property="Grid.Row" Value="0" />
                            <Setter TargetName="PART_ContentBottomRow" Property="Height" Value="Auto" />
                            <Setter TargetName="PART_ContentLeftCol" Property="Width" Value="Auto" />
                            <Setter TargetName="PART_ContentRightCol" Property="Width" Value="*" />
                            <Setter TargetName="PART_ContentTopRow" Property="Height" Value="*" />
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter TargetName="ContentSite" Property="Grid.Column" Value="0" />
                            <Setter TargetName="ContentSite" Property="Grid.Row" Value="1" />
                            <Setter TargetName="PART_ContentBottomRow" Property="Height" Value="*" />
                            <Setter TargetName="PART_ContentLeftCol" Property="Width" Value="*" />
                            <Setter TargetName="PART_ContentRightCol" Property="Width" Value="Auto" />
                            <Setter TargetName="PART_ContentTopRow" Property="Height" Value="Auto" />
                        </Trigger>

                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}, Path=(mah:TabControlHelper.Underlined)}" Value="None">
                            <Setter TargetName="Underline" Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}, Path=(mah:TabControlHelper.Underlined)}" Value="SelectedTabItem">
                            <Setter TargetName="Underline" Property="LineExtent" Value="{DynamicResource TabItemUnderlineExtentSelectedTabItem}" />
                            <Setter TargetName="Underline" Property="LineThickness" Value="{DynamicResource TabItemUnderlineThicknessSelectedTabItem}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}, Path=(mah:TabControlHelper.Underlined)}" Value="TabPanel">
                            <Setter TargetName="Underline" Property="LineExtent" Value="{DynamicResource TabItemUnderlineExtentTabPanel}" />
                            <Setter TargetName="Underline" Property="LineThickness" Value="{DynamicResource TabItemUnderlineThicknessTabPanel}" />
                        </DataTrigger>

                        <Trigger Property="IsSelected" Value="true">
                            <Setter TargetName="ContentSite" Property="TextElement.Foreground" Value="#44546F" />
                            <Setter TargetName="Underline" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:TabControlHelper.UnderlineSelectedBrush), Mode=OneWay}" />

                            <Setter TargetName="Border" Property="BorderThickness" Value="2" />
                        </Trigger>

                        <!--  Selected  -->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}, Path=(mah:TabControlHelper.Underlined)}" Value="TabPanel" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Underline" Property="LineThickness" Value="{DynamicResource TabItemSelectedUnderlineThicknessTabPanel}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}, Path=(mah:TabControlHelper.Underlined)}" Value="SelectedTabItem" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Underline" Property="LineThickness" Value="{DynamicResource TabItemSelectedUnderlineThicknessSelectedTabItem}" />
                        </MultiDataTrigger>

                        <Trigger SourceName="Border" Property="IsMouseOver" Value="True">
                            <Setter TargetName="ContentSite" Property="TextElement.Foreground" Value="#44546F" />
                            <Setter TargetName="Underline" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:TabControlHelper.UnderlineMouseOverBrush), Mode=OneWay}" />
                        </Trigger>

                        <!--  MouseOver  -->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}, Path=(mah:TabControlHelper.Underlined)}" Value="TabPanel" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="False" />
                                <Condition Binding="{Binding ElementName=Border, Path=IsMouseOver}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Underline" Property="LineThickness" Value="{DynamicResource TabItemMouseOverUnderlineThicknessTabPanel}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}, Path=(mah:TabControlHelper.Underlined)}" Value="SelectedTabItem" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="False" />
                                <Condition Binding="{Binding ElementName=Border, Path=IsMouseOver}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Underline" Property="LineThickness" Value="{DynamicResource TabItemMouseOverUnderlineThicknessSelectedTabItem}" />
                        </MultiDataTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition SourceName="Border" Property="IsMouseOver" Value="True" />
                                <Condition Property="IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ContentSite" Property="TextElement.Foreground" Value="#44546F" />
                            <Setter TargetName="Underline" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:TabControlHelper.UnderlineMouseOverSelectedBrush), Mode=OneWay}" />
                        </MultiTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}, Path=(mah:TabControlHelper.UnderlinePlacement)}" Value="Top" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=TabStripPlacement}" Value="Top" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Underline" Property="Grid.Column" Value="0" />
                            <Setter TargetName="Underline" Property="Grid.Row" Value="0" />
                            <Setter TargetName="Underline" Property="HorizontalAlignment" Value="Stretch" />
                            <Setter TargetName="Underline" Property="Placement" Value="Top" />
                            <Setter TargetName="Underline" Property="VerticalAlignment" Value="Top" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}, Path=(mah:TabControlHelper.UnderlinePlacement)}" Value="Top" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=TabStripPlacement}" Value="Bottom" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Underline" Property="Grid.Column" Value="0" />
                            <Setter TargetName="Underline" Property="Grid.Row" Value="0" />
                            <Setter TargetName="Underline" Property="HorizontalAlignment" Value="Stretch" />
                            <Setter TargetName="Underline" Property="Placement" Value="Top" />
                            <Setter TargetName="Underline" Property="VerticalAlignment" Value="Top" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}, Path=(mah:TabControlHelper.UnderlinePlacement)}" Value="Top" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=TabStripPlacement}" Value="Left" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Underline" Property="Grid.Column" Value="0" />
                            <Setter TargetName="Underline" Property="Grid.Row" Value="0" />
                            <Setter TargetName="Underline" Property="HorizontalAlignment" Value="Stretch" />
                            <Setter TargetName="Underline" Property="Placement" Value="Top" />
                            <Setter TargetName="Underline" Property="VerticalAlignment" Value="Top" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}, Path=(mah:TabControlHelper.UnderlinePlacement)}" Value="Top" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=TabStripPlacement}" Value="Right" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Underline" Property="Grid.Column" Value="1" />
                            <Setter TargetName="Underline" Property="Grid.Row" Value="0" />
                            <Setter TargetName="Underline" Property="HorizontalAlignment" Value="Stretch" />
                            <Setter TargetName="Underline" Property="Placement" Value="Top" />
                            <Setter TargetName="Underline" Property="VerticalAlignment" Value="Top" />
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}, Path=(mah:TabControlHelper.UnderlinePlacement)}" Value="Bottom" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=TabStripPlacement}" Value="Top" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Underline" Property="Grid.Column" Value="0" />
                            <Setter TargetName="Underline" Property="Grid.Row" Value="1" />
                            <Setter TargetName="Underline" Property="HorizontalAlignment" Value="Stretch" />
                            <Setter TargetName="Underline" Property="Placement" Value="Bottom" />
                            <Setter TargetName="Underline" Property="VerticalAlignment" Value="Bottom" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}, Path=(mah:TabControlHelper.UnderlinePlacement)}" Value="Bottom" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=TabStripPlacement}" Value="Bottom" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Underline" Property="Grid.Column" Value="0" />
                            <Setter TargetName="Underline" Property="Grid.Row" Value="1" />
                            <Setter TargetName="Underline" Property="HorizontalAlignment" Value="Stretch" />
                            <Setter TargetName="Underline" Property="Placement" Value="Bottom" />
                            <Setter TargetName="Underline" Property="VerticalAlignment" Value="Bottom" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}, Path=(mah:TabControlHelper.UnderlinePlacement)}" Value="Bottom" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=TabStripPlacement}" Value="Left" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Underline" Property="Grid.Column" Value="0" />
                            <Setter TargetName="Underline" Property="Grid.Row" Value="1" />
                            <Setter TargetName="Underline" Property="HorizontalAlignment" Value="Stretch" />
                            <Setter TargetName="Underline" Property="Placement" Value="Bottom" />
                            <Setter TargetName="Underline" Property="VerticalAlignment" Value="Bottom" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}, Path=(mah:TabControlHelper.UnderlinePlacement)}" Value="Bottom" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=TabStripPlacement}" Value="Right" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Underline" Property="Grid.Column" Value="1" />
                            <Setter TargetName="Underline" Property="Grid.Row" Value="1" />
                            <Setter TargetName="Underline" Property="HorizontalAlignment" Value="Stretch" />
                            <Setter TargetName="Underline" Property="Placement" Value="Bottom" />
                            <Setter TargetName="Underline" Property="VerticalAlignment" Value="Bottom" />
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}, Path=(mah:TabControlHelper.UnderlinePlacement)}" Value="Left" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=TabStripPlacement}" Value="Top" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Underline" Property="Grid.Column" Value="0" />
                            <Setter TargetName="Underline" Property="Grid.Row" Value="0" />
                            <Setter TargetName="Underline" Property="HorizontalAlignment" Value="Left" />
                            <Setter TargetName="Underline" Property="Placement" Value="Left" />
                            <Setter TargetName="Underline" Property="VerticalAlignment" Value="Stretch" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}, Path=(mah:TabControlHelper.UnderlinePlacement)}" Value="Left" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=TabStripPlacement}" Value="Bottom" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Underline" Property="Grid.Column" Value="0" />
                            <Setter TargetName="Underline" Property="Grid.Row" Value="1" />
                            <Setter TargetName="Underline" Property="HorizontalAlignment" Value="Left" />
                            <Setter TargetName="Underline" Property="Placement" Value="Left" />
                            <Setter TargetName="Underline" Property="VerticalAlignment" Value="Stretch" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}, Path=(mah:TabControlHelper.UnderlinePlacement)}" Value="Left" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=TabStripPlacement}" Value="Left" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Underline" Property="Grid.Column" Value="0" />
                            <Setter TargetName="Underline" Property="Grid.Row" Value="0" />
                            <Setter TargetName="Underline" Property="HorizontalAlignment" Value="Left" />
                            <Setter TargetName="Underline" Property="Placement" Value="Left" />
                            <Setter TargetName="Underline" Property="VerticalAlignment" Value="Stretch" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}, Path=(mah:TabControlHelper.UnderlinePlacement)}" Value="Left" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=TabStripPlacement}" Value="Right" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Underline" Property="Grid.Column" Value="0" />
                            <Setter TargetName="Underline" Property="Grid.Row" Value="0" />
                            <Setter TargetName="Underline" Property="HorizontalAlignment" Value="Left" />
                            <Setter TargetName="Underline" Property="Placement" Value="Left" />
                            <Setter TargetName="Underline" Property="VerticalAlignment" Value="Stretch" />
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}, Path=(mah:TabControlHelper.UnderlinePlacement)}" Value="Right" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=TabStripPlacement}" Value="Top" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Underline" Property="Grid.Column" Value="0" />
                            <Setter TargetName="Underline" Property="Grid.Row" Value="0" />
                            <Setter TargetName="Underline" Property="HorizontalAlignment" Value="Right" />
                            <Setter TargetName="Underline" Property="Placement" Value="Right" />
                            <Setter TargetName="Underline" Property="VerticalAlignment" Value="Stretch" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}, Path=(mah:TabControlHelper.UnderlinePlacement)}" Value="Right" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=TabStripPlacement}" Value="Bottom" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Underline" Property="Grid.Column" Value="1" />
                            <Setter TargetName="Underline" Property="Grid.Row" Value="1" />
                            <Setter TargetName="Underline" Property="HorizontalAlignment" Value="Right" />
                            <Setter TargetName="Underline" Property="Placement" Value="Right" />
                            <Setter TargetName="Underline" Property="VerticalAlignment" Value="Stretch" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}, Path=(mah:TabControlHelper.UnderlinePlacement)}" Value="Right" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=TabStripPlacement}" Value="Left" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Underline" Property="Grid.Column" Value="0" />
                            <Setter TargetName="Underline" Property="Grid.Row" Value="0" />
                            <Setter TargetName="Underline" Property="HorizontalAlignment" Value="Right" />
                            <Setter TargetName="Underline" Property="Placement" Value="Right" />
                            <Setter TargetName="Underline" Property="VerticalAlignment" Value="Stretch" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}, Path=(mah:TabControlHelper.UnderlinePlacement)}" Value="Right" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=TabStripPlacement}" Value="Right" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Underline" Property="Grid.Column" Value="1" />
                            <Setter TargetName="Underline" Property="Grid.Row" Value="0" />
                            <Setter TargetName="Underline" Property="HorizontalAlignment" Value="Right" />
                            <Setter TargetName="Underline" Property="Placement" Value="Right" />
                            <Setter TargetName="Underline" Property="VerticalAlignment" Value="Stretch" />
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="VerticalContentAlignment" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}, Path=VerticalContentAlignment, Mode=OneWay, FallbackValue={x:Static VerticalAlignment.Stretch}}" />
        <Setter Property="mah:HeaderedControlHelper.HeaderBackground" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}, Path=(mah:HeaderedControlHelper.HeaderBackground), Mode=OneWay, FallbackValue={x:Static Brushes.Transparent}}" />
        <Setter Property="mah:HeaderedControlHelper.HeaderFontFamily" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}, Path=(mah:HeaderedControlHelper.HeaderFontFamily), Mode=OneWay, FallbackValue={x:Static SystemFonts.MessageFontFamily}}" />
        <Setter Property="mah:HeaderedControlHelper.HeaderFontSize" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}, Path=(mah:HeaderedControlHelper.HeaderFontSize), Mode=OneWay, FallbackValue={x:Static SystemFonts.MessageFontSize}}" />
        <Setter Property="mah:HeaderedControlHelper.HeaderFontStretch" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}, Path=(mah:HeaderedControlHelper.HeaderFontStretch), Mode=OneWay, FallbackValue={x:Static FontStretches.Normal}}" />
        <Setter Property="mah:HeaderedControlHelper.HeaderFontWeight" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}, Path=(mah:HeaderedControlHelper.HeaderFontWeight), Mode=OneWay, FallbackValue={x:Static SystemFonts.MessageFontWeight}}" />
        <Setter Property="mah:HeaderedControlHelper.HeaderForeground" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}, Path=(mah:HeaderedControlHelper.HeaderForeground), Mode=OneWay, FallbackValue={x:Static SystemColors.ControlTextBrush}}" />
        <Setter Property="mah:HeaderedControlHelper.HeaderHorizontalContentAlignment" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}, Path=(mah:HeaderedControlHelper.HeaderHorizontalContentAlignment), Mode=OneWay, FallbackValue={x:Static HorizontalAlignment.Stretch}}" />
        <Setter Property="mah:HeaderedControlHelper.HeaderMargin" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}, Path=(mah:HeaderedControlHelper.HeaderMargin), Mode=OneWay, FallbackValue='6 2'}" />
        <Setter Property="mah:HeaderedControlHelper.HeaderVerticalContentAlignment" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}, Path=(mah:HeaderedControlHelper.HeaderVerticalContentAlignment), Mode=OneWay, FallbackValue={x:Static VerticalAlignment.Center}}" />
        <Setter Property="mah:TabControlHelper.UnderlineBrush" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}, Path=(mah:TabControlHelper.UnderlineBrush), Mode=OneWay, FallbackValue={x:Null}}" />
        <Setter Property="mah:TabControlHelper.UnderlineMouseOverBrush" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}, Path=(mah:TabControlHelper.UnderlineMouseOverBrush), Mode=OneWay, FallbackValue={x:Null}}" />
        <Setter Property="mah:TabControlHelper.UnderlineMouseOverSelectedBrush" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}, Path=(mah:TabControlHelper.UnderlineMouseOverSelectedBrush), Mode=OneWay, FallbackValue={x:Null}}" />
        <Setter Property="mah:TabControlHelper.UnderlinePlacement" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}, Path=(mah:TabControlHelper.UnderlinePlacement), Mode=OneWay, FallbackValue={x:Null}}" />
        <Setter Property="mah:TabControlHelper.UnderlineSelectedBrush" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}, Path=(mah:TabControlHelper.UnderlineSelectedBrush), Mode=OneWay, FallbackValue={x:Null}}" />
    </Style>
    <mah:ClockDegreeConverter x:Key="ClockDegreeConverter" TotalParts="60" />
    <mah:ClockDegreeConverter x:Key="HourDegreeConverter" TotalParts="12" />
    <x:Array x:Key="FiveMinuteKeys" Type="system:Int32">
        <system:Int32>0</system:Int32>
        <system:Int32>5</system:Int32>
        <system:Int32>10</system:Int32>
        <system:Int32>15</system:Int32>
        <system:Int32>20</system:Int32>
        <system:Int32>25</system:Int32>
        <system:Int32>30</system:Int32>
        <system:Int32>35</system:Int32>
        <system:Int32>40</system:Int32>
        <system:Int32>45</system:Int32>
        <system:Int32>50</system:Int32>
        <system:Int32>55</system:Int32>
    </x:Array>

    <x:Array x:Key="MinuteKeys" Type="system:Int32">
        <system:Int32>1</system:Int32>
        <system:Int32>2</system:Int32>
        <system:Int32>3</system:Int32>
        <system:Int32>4</system:Int32>
        <system:Int32>6</system:Int32>
        <system:Int32>7</system:Int32>
        <system:Int32>8</system:Int32>
        <system:Int32>9</system:Int32>
        <system:Int32>11</system:Int32>
        <system:Int32>12</system:Int32>
        <system:Int32>13</system:Int32>
        <system:Int32>14</system:Int32>
        <system:Int32>16</system:Int32>
        <system:Int32>17</system:Int32>
        <system:Int32>18</system:Int32>
        <system:Int32>19</system:Int32>
        <system:Int32>21</system:Int32>
        <system:Int32>22</system:Int32>
        <system:Int32>23</system:Int32>
        <system:Int32>24</system:Int32>
        <system:Int32>26</system:Int32>
        <system:Int32>27</system:Int32>
        <system:Int32>28</system:Int32>
        <system:Int32>29</system:Int32>
        <system:Int32>31</system:Int32>
        <system:Int32>32</system:Int32>
        <system:Int32>33</system:Int32>
        <system:Int32>34</system:Int32>
        <system:Int32>36</system:Int32>
        <system:Int32>37</system:Int32>
        <system:Int32>38</system:Int32>
        <system:Int32>39</system:Int32>
        <system:Int32>41</system:Int32>
        <system:Int32>42</system:Int32>
        <system:Int32>43</system:Int32>
        <system:Int32>44</system:Int32>
        <system:Int32>46</system:Int32>
        <system:Int32>47</system:Int32>
        <system:Int32>48</system:Int32>
        <system:Int32>49</system:Int32>
        <system:Int32>51</system:Int32>
        <system:Int32>52</system:Int32>
        <system:Int32>53</system:Int32>
        <system:Int32>54</system:Int32>
        <system:Int32>56</system:Int32>
        <system:Int32>57</system:Int32>
        <system:Int32>58</system:Int32>
        <system:Int32>59</system:Int32>
    </x:Array>
    <DataTemplate x:Key="MahApps.Templates.DateTimePicker.FiveMinuteIndicator">
        <StackPanel
            Height="57"
            Orientation="Horizontal"
            RenderTransformOrigin=".5,1">
            <StackPanel.RenderTransform>
                <RotateTransform Angle="{Binding Converter={StaticResource ClockDegreeConverter}, Mode=OneTime}" />
            </StackPanel.RenderTransform>
            <Rectangle
                Width="2"
                Height="10"
                Margin="0,-49,0,0"
                Fill="{DynamicResource MahApps.Brushes.Accent3}" />
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="MahApps.Templates.DateTimePicker.MinuteIndicator">
        <StackPanel
            Height="57"
            Orientation="Horizontal"
            RenderTransformOrigin=".5,1">
            <StackPanel.RenderTransform>
                <RotateTransform Angle="{Binding Converter={StaticResource ClockDegreeConverter}, Mode=OneTime}" />
            </StackPanel.RenderTransform>
            <Rectangle
                Width="1"
                Height="5"
                Margin="0,-49.75,0,0"
                Fill="{DynamicResource MahApps.Brushes.Accent4}" />
        </StackPanel>
    </DataTemplate>
    <Style x:Key="TimePickerBase" TargetType="{x:Type mah:DateTimePicker}">
        <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Control.Background}" />
        <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.TextBox.Border}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="ContextMenu" Value="{DynamicResource MahApps.TextBox.ContextMenu}" />
        <Setter Property="FontFamily" Value="{DynamicResource MahApps.Fonts.Family.Control}" />
        <Setter Property="FontSize" Value="{DynamicResource MahApps.Font.Size.Content}" />
        <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Text}" />
        <Setter Property="HandVisibility" Value="HourMinute" />
        <Setter Property="MinHeight" Value="26" />
        <Setter Property="Padding" Value="4" />
        <Setter Property="PickerVisibility" Value="HourMinute" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type mah:TimePickerBase}">
                    <Grid x:Name="PART_Root">
                        <Border
                            x:Name="Base"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding mah:ControlsHelper.CornerRadius}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

                        <Grid x:Name="PART_InnerGrid" Margin="{TemplateBinding BorderThickness}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="TextColumn" Width="*" />
                                <ColumnDefinition x:Name="ClearButtonColumn" Width="Auto" />
                                <ColumnDefinition x:Name="ButtonColumn" Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition x:Name="ButtonRow" Height="*" />
                            </Grid.RowDefinitions>

                            <DatePickerTextBox
                                x:Name="PART_TextBox"
                                Grid.Row="1"
                                Grid.Column="0"
                                Margin="0"
                                Padding="{TemplateBinding Padding}"
                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                mah:TextBoxHelper.Watermark="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:TextBoxHelper.Watermark), Mode=OneWay}"
                                mah:TextBoxHelper.WatermarkAlignment="{TemplateBinding mah:TextBoxHelper.WatermarkAlignment}"
                                mah:TextBoxHelper.WatermarkTrimming="{TemplateBinding mah:TextBoxHelper.WatermarkTrimming}"
                                CaretBrush="{DynamicResource MahApps.Brushes.ThemeForeground}"
                                ContextMenu="{TemplateBinding ContextMenu}"
                                Focusable="{TemplateBinding Focusable}"
                                FontFamily="{TemplateBinding FontFamily}"
                                FontSize="{TemplateBinding FontSize}"
                                Foreground="{TemplateBinding Foreground}"
                                IsReadOnly="{Binding Path=IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}"
                                SelectionBrush="{DynamicResource MahApps.Brushes.Highlight}"
                                Style="{DynamicResource MahApps.Styles.DatePickerTextBox.TimePickerBase}">
                                <i:Interaction.Behaviors>
                                    <mah:DatePickerTextBoxBehavior />
                                </i:Interaction.Behaviors>
                            </DatePickerTextBox>

                            <ContentControl
                                x:Name="PART_FloatingMessageContainer"
                                Grid.Row="0"
                                Grid.Column="0"
                                Margin="4,0"
                                Style="{DynamicResource MahApps.Styles.ContentControl.FloatingMessageContainer}">
                                <ContentControl.Height>
                                    <MultiBinding Converter="{mah:MathMultiplyConverter}" FallbackValue="0">
                                        <Binding
                                            ElementName="PART_FloatingMessage"
                                            Mode="OneWay"
                                            Path="ActualHeight" />
                                        <Binding
                                            ElementName="PART_FloatingMessageContainer"
                                            Mode="OneWay"
                                            Path="Opacity" />
                                    </MultiBinding>
                                </ContentControl.Height>
                                <TextBlock
                                    x:Name="PART_FloatingMessage"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Foreground="{TemplateBinding Foreground}"
                                    Style="{DynamicResource MahApps.Styles.TextBlock.AutoCollapsing}"
                                    Text="{TemplateBinding mah:TextBoxHelper.Watermark}"
                                    TextAlignment="{TemplateBinding mah:TextBoxHelper.WatermarkAlignment}"
                                    TextTrimming="{TemplateBinding mah:TextBoxHelper.WatermarkTrimming}">
                                    <TextBlock.RenderTransform>
                                        <TranslateTransform x:Name="FloatingMessageTransform">
                                            <TranslateTransform.Y>
                                                <MultiBinding Converter="{mah:MathSubtractConverter}" FallbackValue="0">
                                                    <Binding
                                                        ElementName="PART_FloatingMessage"
                                                        Mode="OneWay"
                                                        Path="ActualHeight" />
                                                    <Binding
                                                        ElementName="PART_FloatingMessageContainer"
                                                        Mode="OneWay"
                                                        Path="ActualHeight" />
                                                </MultiBinding>
                                            </TranslateTransform.Y>
                                        </TranslateTransform>
                                    </TextBlock.RenderTransform>
                                </TextBlock>
                            </ContentControl>

                            <Button
                                x:Name="PART_ClearText"
                                Grid.Row="0"
                                Grid.RowSpan="2"
                                Grid.Column="1"
                                Width="{TemplateBinding mah:TextBoxHelper.ButtonWidth}"
                                Command="{TemplateBinding mah:TextBoxHelper.ButtonCommand}"
                                CommandParameter="{TemplateBinding mah:TextBoxHelper.ButtonCommandParameter}"
                                Content="{TemplateBinding mah:TextBoxHelper.ButtonContent}"
                                ContentTemplate="{TemplateBinding mah:TextBoxHelper.ButtonContentTemplate}"
                                Focusable="False"
                                FontFamily="{TemplateBinding mah:TextBoxHelper.ButtonFontFamily}"
                                FontSize="{TemplateBinding mah:TextBoxHelper.ButtonFontSize}"
                                IsTabStop="False"
                                Style="{DynamicResource MahApps.Styles.Button.Chromeless}"
                                Template="{TemplateBinding mah:TextBoxHelper.ButtonTemplate}"
                                Visibility="Visible" />

                            <Button
                                x:Name="PART_Button"
                                Grid.Row="0"
                                Grid.RowSpan="2"
                                Grid.Column="2"
                                Width="{TemplateBinding mah:TextBoxHelper.ButtonWidth}"
                                Margin="0,6,6,6"
                                Content="{TemplateBinding mah:DatePickerHelper.DropDownButtonContent}"
                                ContentTemplate="{TemplateBinding mah:DatePickerHelper.DropDownButtonContentTemplate}"
                                Focusable="False"
                                FontFamily="{TemplateBinding mah:DatePickerHelper.DropDownButtonFontFamily}"
                                FontSize="{TemplateBinding mah:DatePickerHelper.DropDownButtonFontSize}"
                                IsTabStop="False"
                                Style="{StaticResource TextBoxRightButtonStyle}" />

                            <controlEx:PopupEx
                                x:Name="PART_Popup"
                                Grid.Row="1"
                                Grid.Column="0"
                                Grid.ColumnSpan="2"
                                AllowsTransparency="True"
                                Focusable="False"
                                Placement="Bottom"
                                PlacementTarget="{Binding ElementName=PART_Root}"
                                PopupAnimation="Fade"
                                StaysOpen="False">
                                <Border
                                    x:Name="PART_PopupBorder"
                                    Background="{DynamicResource MahApps.Brushes.Control.Background}"
                                    BorderBrush="{DynamicResource MahApps.Brushes.Control.Border}"
                                    BorderThickness="1">
                                    <StackPanel x:Name="PART_PopupContainer" Background="Transparent">
                                        <ContentPresenter
                                            x:Name="PART_Calendar"
                                            Margin="2,0"
                                            Focusable="False"
                                            Visibility="Collapsed" />
                                        <Grid VerticalAlignment="Center">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="*" />
                                            </Grid.RowDefinitions>
                                            <Border
                                                x:Name="PART_Clock"
                                                Grid.Row="0"
                                                Width="120"
                                                Height="120"
                                                Margin="0,5,5,0"
                                                HorizontalAlignment="Center"
                                                BorderBrush="{DynamicResource MahApps.Brushes.Accent}"
                                                BorderThickness="2"
                                                CornerRadius="75">
                                                <Canvas HorizontalAlignment="Center">
                                                    <ItemsControl
                                                        Focusable="False"
                                                        IsTabStop="False"
                                                        ItemTemplate="{StaticResource MahApps.Templates.DateTimePicker.FiveMinuteIndicator}"
                                                        ItemsSource="{StaticResource FiveMinuteKeys}">
                                                        <ItemsControl.ItemsPanel>
                                                            <ItemsPanelTemplate>
                                                                <Canvas IsItemsHost="True" />
                                                            </ItemsPanelTemplate>
                                                        </ItemsControl.ItemsPanel>
                                                    </ItemsControl>
                                                    <ItemsControl
                                                        Focusable="False"
                                                        IsTabStop="False"
                                                        ItemTemplate="{StaticResource MahApps.Templates.DateTimePicker.MinuteIndicator}"
                                                        ItemsSource="{StaticResource MinuteKeys}">
                                                        <ItemsControl.ItemsPanel>
                                                            <ItemsPanelTemplate>
                                                                <Canvas IsItemsHost="True" />
                                                            </ItemsPanelTemplate>
                                                        </ItemsControl.ItemsPanel>
                                                    </ItemsControl>
                                                    <Rectangle
                                                        x:Name="PART_MinuteHand"
                                                        Canvas.Top="6"
                                                        Width="2"
                                                        Height="51"
                                                        HorizontalAlignment="Center"
                                                        Fill="{DynamicResource MahApps.Brushes.ThemeForeground}"
                                                        RenderTransformOrigin=".5,1">
                                                        <Rectangle.RenderTransform>
                                                            <RotateTransform Angle="{Binding Path=SelectedDateTime, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ClockDegreeConverter}, ConverterParameter='m', Mode=OneWay}" />
                                                        </Rectangle.RenderTransform>
                                                    </Rectangle>
                                                    <Rectangle
                                                        x:Name="PART_HourHand"
                                                        Canvas.Top="27"
                                                        Width="2"
                                                        Height="30"
                                                        HorizontalAlignment="Center"
                                                        Fill="{DynamicResource MahApps.Brushes.ThemeForeground}"
                                                        RenderTransformOrigin=".5,1">
                                                        <Rectangle.RenderTransform>
                                                            <RotateTransform Angle="{Binding Path=SelectedDateTime, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource HourDegreeConverter}, ConverterParameter='h', Mode=OneWay}" />
                                                        </Rectangle.RenderTransform>
                                                    </Rectangle>
                                                    <Ellipse
                                                        Canvas.Left="-2"
                                                        Canvas.Top="54"
                                                        Width="6"
                                                        Height="6"
                                                        Fill="{DynamicResource MahApps.Brushes.ThemeForeground}" />
                                                    <Rectangle
                                                        x:Name="PART_SecondHand"
                                                        Canvas.Left="0.75"
                                                        Canvas.Top="6"
                                                        Width="1"
                                                        Height="61"
                                                        Margin="0,5,0,0"
                                                        HorizontalAlignment="Center"
                                                        Fill="{DynamicResource MahApps.Brushes.ThemeForeground}"
                                                        Opacity=".25"
                                                        RenderTransformOrigin=".5,.75">
                                                        <Rectangle.RenderTransform>
                                                            <RotateTransform Angle="{Binding Path=SelectedDateTime, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ClockDegreeConverter}, ConverterParameter='s', Mode=OneWay}" />
                                                        </Rectangle.RenderTransform>
                                                    </Rectangle>
                                                </Canvas>
                                            </Border>
                                            <Grid
                                                x:Name="PART_ClockPartSelectorsHolder"
                                                Grid.Row="1"
                                                Margin="5"
                                                HorizontalAlignment="Center"
                                                VerticalAlignment="Center">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto" />
                                                    <ColumnDefinition Width="Auto" />
                                                    <ColumnDefinition Width="Auto" />
                                                    <ColumnDefinition Width="Auto" />
                                                    <ColumnDefinition Width="Auto" />
                                                    <ColumnDefinition Width="Auto" />
                                                </Grid.ColumnDefinitions>
                                                <ComboBox
                                                    x:Name="PART_HourPicker"
                                                    Grid.Column="0"
                                                    FontFamily="{TemplateBinding FontFamily}"
                                                    FontSize="{TemplateBinding FontSize}"
                                                    ItemStringFormat="{TemplateBinding HoursItemStringFormat}"
                                                    ItemsSource="{TemplateBinding SourceHours}" />
                                                <Label
                                                    x:Name="PART_HourMinuteColon"
                                                    Grid.Column="1"
                                                    Content=":"
                                                    Visibility="Collapsed" />
                                                <ComboBox
                                                    x:Name="PART_MinutePicker"
                                                    Grid.Column="2"
                                                    FontFamily="{TemplateBinding FontFamily}"
                                                    FontSize="{TemplateBinding FontSize}"
                                                    ItemStringFormat="{TemplateBinding MinutesItemStringFormat}"
                                                    ItemsSource="{TemplateBinding SourceMinutes}" />
                                                <Label
                                                    x:Name="PART_MinuteSecondColon"
                                                    Grid.Column="3"
                                                    Content=":"
                                                    Visibility="Collapsed" />
                                                <ComboBox
                                                    x:Name="PART_SecondPicker"
                                                    Grid.Column="4"
                                                    FontFamily="{TemplateBinding FontFamily}"
                                                    FontSize="{TemplateBinding FontSize}"
                                                    ItemStringFormat="{TemplateBinding SecondsItemStringFormat}"
                                                    ItemsSource="{TemplateBinding SourceSeconds}" />
                                                <ComboBox
                                                    x:Name="PART_AmPmSwitcher"
                                                    Grid.Column="5"
                                                    FontFamily="{TemplateBinding FontFamily}"
                                                    FontSize="{TemplateBinding FontSize}" />
                                            </Grid>
                                        </Grid>
                                    </StackPanel>
                                </Border>
                            </controlEx:PopupEx>
                        </Grid>

                        <Border
                            x:Name="DisabledVisualElement"
                            Background="{DynamicResource MahApps.Brushes.Control.Disabled}"
                            BorderBrush="{DynamicResource MahApps.Brushes.Control.Disabled}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding mah:ControlsHelper.CornerRadius}"
                            IsHitTestVisible="False"
                            Opacity="0"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ControlsHelper.DisabledVisualElementVisibility), Mode=OneWay}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition SourceName="PART_HourPicker" Property="Visibility" Value="Visible" />
                                <Condition SourceName="PART_MinutePicker" Property="Visibility" Value="Visible" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_HourMinuteColon" Property="Visibility" Value="Visible" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition SourceName="PART_MinutePicker" Property="Visibility" Value="Visible" />
                                <Condition SourceName="PART_SecondPicker" Property="Visibility" Value="Visible" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_MinuteSecondColon" Property="Visibility" Value="Visible" />
                        </MultiTrigger>

                        <Trigger Property="mah:TextBoxHelper.ClearTextButton" Value="True">
                            <Setter TargetName="PART_ClearText" Property="Command" Value="{x:Static mah:MahAppsCommands.ClearControlCommand}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="mah:TextBoxHelper.ClearTextButton" Value="False" />
                                <Condition Property="mah:TextBoxHelper.ButtonCommand" Value="{x:Null}" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_ClearText" Property="Visibility" Value="Collapsed" />
                        </MultiTrigger>

                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=(mah:TextBoxHelper.ButtonsAlignment)}" Value="Left">
                            <Setter TargetName="ButtonColumn" Property="Width" Value="*" />
                            <Setter TargetName="PART_Button" Property="Grid.Column" Value="0" />
                            <Setter TargetName="PART_ClearText" Property="Grid.Column" Value="1" />
                            <Setter TargetName="PART_FloatingMessageContainer" Property="Grid.Column" Value="2" />
                            <Setter TargetName="PART_TextBox" Property="Grid.Column" Value="2" />
                            <Setter TargetName="TextColumn" Property="Width" Value="Auto" />
                        </DataTrigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Base" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ControlsHelper.MouseOverBorderBrush)}" />
                        </Trigger>
                        <Trigger SourceName="PART_TextBox" Property="IsFocused" Value="True">
                            <Setter TargetName="Base" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ControlsHelper.FocusBorderBrush)}" />
                            <Setter TargetName="PART_FloatingMessage" Property="Foreground" Value="{DynamicResource MahApps.Brushes.TextBlock.FloatingMessage}" />
                            <Setter TargetName="PART_FloatingMessage" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                            <Setter TargetName="Base" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ControlsHelper.FocusBorderBrush)}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="DisabledVisualElement" Property="Opacity" Value="0.6" />
                        </Trigger>
                        <Trigger Property="IsReadOnly" Value="True">
                            <Setter TargetName="PART_Button" Property="IsEnabled" Value="False" />
                            <Setter TargetName="PART_Calendar" Property="IsHitTestVisible" Value="False" />
                            <Setter TargetName="PART_ClockPartSelectorsHolder" Property="IsHitTestVisible" Value="False" />
                            <Setter TargetName="PART_TextBox" Property="IsReadOnly" Value="True" />
                        </Trigger>
                        <Trigger SourceName="PART_Button" Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_Button" Property="Background" Value="{DynamicResource MahApps.Brushes.Gray8}" />
                            <Setter TargetName="PART_Button" Property="Foreground" Value="{DynamicResource MahApps.Brushes.Accent}" />
                        </Trigger>
                        <Trigger SourceName="PART_Button" Property="IsPressed" Value="True">
                            <Setter TargetName="PART_Button" Property="Background" Value="{DynamicResource MahApps.Brushes.ThemeForeground}" />
                            <Setter TargetName="PART_Button" Property="Foreground" Value="{DynamicResource MahApps.Brushes.ThemeBackground}" />
                        </Trigger>

                        <Trigger Property="IsClockVisible" Value="False">
                            <Setter TargetName="PART_Clock" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsDatePickerVisible" Value="True">
                            <Setter TargetName="PART_Calendar" Property="Visibility" Value="Visible" />
                        </Trigger>

                        <Trigger SourceName="PART_ClearText" Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_ClearText" Property="Background" Value="{DynamicResource MahApps.Brushes.Gray8}" />
                            <Setter TargetName="PART_ClearText" Property="Foreground" Value="{DynamicResource MahApps.Brushes.Accent}" />
                        </Trigger>
                        <Trigger SourceName="PART_ClearText" Property="IsPressed" Value="True">
                            <Setter TargetName="PART_ClearText" Property="Background" Value="{DynamicResource MahApps.Brushes.ThemeForeground}" />
                            <Setter TargetName="PART_ClearText" Property="Foreground" Value="{DynamicResource MahApps.Brushes.ThemeBackground}" />
                        </Trigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsVisible, RelativeSource={RelativeSource Self}}" Value="True" />
                                <Condition Binding="{Binding Path=(mah:TextBoxHelper.UseFloatingWatermark), RelativeSource={RelativeSource Self}}" Value="True" />
                                <Condition Binding="{Binding Path=(mah:TextBoxHelper.HasText), RelativeSource={RelativeSource Self}}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource MahApps.Storyboard.ShowFloatingMessage}" />
                            </MultiDataTrigger.EnterActions>
                            <MultiDataTrigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource MahApps.Storyboard.HideFloatingMessage}" />
                            </MultiDataTrigger.ExitActions>
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Validation.ErrorTemplate" Value="{DynamicResource MahApps.Templates.ValidationError}" />

        <Setter Property="mah:ControlsHelper.FocusBorderBrush" Value="{DynamicResource MahApps.Brushes.TextBox.Border.Focus}" />
        <Setter Property="mah:ControlsHelper.MouseOverBorderBrush" Value="{DynamicResource MahApps.Brushes.TextBox.Border.MouseOver}" />

        <!--  Modern - Calendar14  -->

        <Setter Property="mah:TextBoxHelper.ButtonCommandParameter" Value="{Binding RelativeSource={RelativeSource Self}, Mode=OneWay}" />
        <Setter Property="mah:TextBoxHelper.ButtonFontSize" Value="{DynamicResource MahApps.Font.Size.Button.ClearText}" />
        <Setter Property="mah:TextBoxHelper.ButtonTemplate" Value="{DynamicResource MahApps.Templates.Button.Chromeless}" />
        <Setter Property="mah:TextBoxHelper.ButtonWidth" Value="22" />
        <Setter Property="mah:TextBoxHelper.IsMonitoring" Value="True" />
    </Style>
</ResourceDictionary>